start: statement*

// Templates
sep_by{expr, separator}: (expr separator)* expr?
sep_by_strict{expr, separator}: (expr separator)* expr
sep_by_plus{expr, separator}: (expr separator)* expr separator?

// Tokens
_NL: /\r?\n/
_FN: /fn/
IDENTIFIER: /(?!fn\b)(?![0-9?])[_a-zA-Z0-9?]+/
INTEGER: /[+-]?(?:0|[1-9][0-9]*)/
STRING: /"(?:\\.|[^"])*"/
_ELLIPSIS: "..."
COMMENT: /#.*/
PIPE: "|>"
_ARROW: "->"
BARE_PARENS: "()"


// Assignment target
?assignment_target: lvalue_name
                  | lvalue_array
                  | lvalue_table

lvalue_name: IDENTIFIER
lvalue_array: "[" sep_by_plus{assignment_target, ","} "]"
lvalue_table: "{" sep_by_plus{assignment_target, ","} "}"


// Statements
?statement: assignment_stmt
          | expression

assignment_stmt: assignment_target "=" expression


// Expressions
?expression.1: expr_no_method_call
           | method_call_expr
           | chained_method_call_expr


?expr_no_method_call: name_literal
                    | int_literal
                    | str_literal
                    | function_definition_expr
                    | function_call_expr
                    | singleton_function_call_expr
                    | paren_expr
                    | paren_function_definition_expr
                    | paren_function_call_expr
                    | paren_method_call_expr
                    | table_literal
                    | array_literal
                    | member_access



?paren_expr: "(" expression ")"

name_literal: IDENTIFIER

int_literal: INTEGER

str_literal: STRING

fn_parameters: IDENTIFIER*
bare_function_definition: _FN fn_parameters ":" statement*
?function_definition_expr: bare_function_definition  "."
?paren_function_definition_expr: "(" bare_function_definition ")"

function_call_expr: expr_no_method_call ":" expression+ "."
paren_function_call_expr: "(" expr_no_method_call ":" expression+ ")"

singleton_function_call_expr: expr_no_method_call "!"

method_call_expr: expr_no_method_call "@" IDENTIFIER expr_no_method_call* "."
paren_method_call_expr: "(" expr_no_method_call "@" IDENTIFIER expr_no_method_call* ")"

chain: "@" | PIPE
single_chained_call: IDENTIFIER expr_no_method_call*
chained_method_call_expr: expr_no_method_call _ELLIPSIS chain sep_by_strict{single_chained_call, chain} "."

table_literal_entry: IDENTIFIER [expression|BARE_PARENS]
table_literal: "{" sep_by{table_literal_entry, ","} "}"

array_literal: "[" sep_by{expression, ","} "]"

member_access: expr_no_method_call _ARROW IDENTIFIER


// Imports
%import common.WS
%ignore WS
%ignore COMMENT